openapi: 3.0.3
tags:
  - name: Cases
    description: Case related endpoints
  - name: Simulations
    description: Simulation related endpoints
  - name: Compute
    description: Various utility endpoints
  - name: Zones
    description: Zone related endpoints
  - name: Score
    description: Score related endpoints
  - name: Partners
    description: Partner related endpoints
  - name: Users
    description: User related endpoints
  - name: PlanParameters
    description: PlanParameters related endpoints
info:
  contact:
    name: API Support
  description: This is the documentation for the Toaztr API.
  title: Toaztr API
  version: 1.0.0
  x-logo:
    altText: Toaztr logo
    url: 'https://www.toaztr.com/assets/toaztr_logo.png'
components:
  securitySchemes:
    OAuth:
      type: oauth2
      description: This API uses OAuth2 with clientCredentials and authorizationCode flows
      flows:
        clientCredentials:
          tokenUrl: https://auth.toaztr.com/oauth2/token
          scopes:
            simulations/*: Full access to simulations endpoints
            cases/*: Full access to cases endpoints
        authorizationCode:
          authorizationUrl: https://auth.toaztr.com/oauth2/authorize
          tokenUrl: https://auth.toaztr.com/oauth2/token
          scopes:
            simulations/*: Full access to simulations endpoints
            cases/*: Full access to cases endpoints
paths:
  '/v1/cases/{id}':
    delete:
      operationId: deleteCase
      tags:
        - Cases
      description: '/cases/{id}'
      parameters:
        - description: Entity tag of the resource that is being updated
          in: header
          name: If-Match
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/DeleteResponse.v1.json
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '409':
          description: Conflict error while trying to update the resource
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Deletes cases based on ID
    get:
      operationId: getCaseById
      tags:
        - Cases
      description: '/cases/{id}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/CaseResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Returns cases by ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    put:
      operationId: putCase
      tags:
        - Cases
      description: '/cases/{id}'
      parameters:
        - description: Entity tag of the resource that is being updated
          in: header
          name: If-Match
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Case.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/CaseResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '409':
          description: Conflict error while trying to update the resource
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Updates cases based on ID
  /v1/cases:
    get:
      operationId: getCases
      tags:
        - Cases
      description: /cases
      parameters:
        - description: The number of items to skip before starting to collect the result set
          in: query
          name: offset
          schema:
            type: integer
        - description: The numbers of items to return
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/CasesResponse.v1.json
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: List cases
    post:
      operationId: postCase
      tags:
        - Cases
      description: /cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Case.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/CaseResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Creates cases
    parameters: []
  '/v1/simulations/{id}':
    delete:
      operationId: deleteSimulation
      tags:
        - Simulations
      description: '/simulations/{id}'
      parameters:
        - description: Entity tag of the resource that is being updated
          in: header
          name: If-Match
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/DeleteResponse.v1.json
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '409':
          description: Conflict error while trying to update the resource
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Deletes simulations based on ID
    get:
      operationId: getSimulationById
      tags:
        - Simulations
      description: '/simulations/{id}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/SimulationResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Returns simulations by ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
  /v1/simulations:
    get:
      operationId: getSimulations
      tags:
        - Simulations
      description: /simulations
      parameters:
        - description: The number of items to skip before starting to collect the result set
          in: query
          name: offset
          schema:
            type: integer
        - description: The numbers of items to return
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/SimulationsResponse.v1.json
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: List simulations
    parameters: []
  /v1/simulations/budget:
    post:
      operationId: postBudgetSimulation
      tags:
        - Simulations
      description: /simulations/budget
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/BudgetParameters.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/SimulationResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Creates budget simulations
    parameters: []
  /v1/simulations/funding:
    post:
      operationId: postFundingSimulation
      tags:
        - Simulations
      description: /simulations/funding
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/FundingParameters.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/SimulationResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Creates funding simulations
    parameters: []
  /v1/simulations/rental_investment:
    post:
      operationId: postRentalInvestmentSimulation
      tags:
        - Simulations
      description: /simulations/rental_investment
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/PinelParameters.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/SimulationResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Creates rental investment simulations
    parameters: []
  /v1/simulations/debt_consolidation:
    post:
      operationId: postDebtConsolidationSimulation
      tags:
        - Simulations
      description: /simulations/debt_consolidation
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/DebtConsolidationParameters.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/SimulationResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Creates debt consolidation simulations
    parameters: []
  /v1/score:
    post:
      operationId: postScore
      tags:
        - Score
      description: /score
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Case.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/ScoreResponse.v1.json
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Compute score and rate on a case
    parameters: []
  '/v1/partners/{id}':
    delete:
      operationId: deletePartner
      tags:
        - Partners
      description: '/partners/{id}'
      parameters:
        - description: Entity tag of the resource that is being updated
          in: header
          name: If-Match
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/DeleteResponse.v1.json
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '409':
          description: Conflict error while trying to update the resource
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Deletes partners based on ID
    get:
      operationId: getPartnerById
      tags:
        - Partners
      description: '/partners/{id}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/PartnerResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Returns partners by ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    put:
      operationId: putPartner
      tags:
        - Partners
      description: '/partners/{id}'
      parameters:
        - description: Entity tag of the resource that is being updated
          in: header
          name: If-Match
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Partner.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/PartnerResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '409':
          description: Conflict error while trying to update the resource
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Updates partners based on ID
  /v1/partners:
    get:
      operationId: getPartners
      tags:
        - Partners
      description: /partners
      parameters:
        - description: The number of items to skip before starting to collect the result set
          in: query
          name: offset
          schema:
            type: integer
        - description: The numbers of items to return
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/PartnersResponse.v1.json
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: List partners
    post:
      operationId: postPartner
      tags:
        - Partners
      description: /partners
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Partner.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/PartnerResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Creates partners
    parameters: []
  /v1/compute/notary_fees:
    post:
      operationId: postNotaryFees
      tags:
        - Compute
      description: /compute/notary_fees
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/NotaryFeesParameters.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/NotaryFees.v1.json
          description: OK
        '400':
          description: Bad request
        '403':
          description: Not authorized to access this endpoint
        '500':
          description: Internal server error
      summary: Compute notary fees
    parameters: []
  /v1/compute/income_tax:
    post:
      operationId: postIncomeTax
      tags:
        - Compute
      description: /compute/income_tax
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/FrenchIncomeTaxParameters.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/FrenchIncomeTax.v1.json
          description: OK
        '400':
          description: Bad request
        '403':
          description: Not authorized to access this endpoint
        '500':
          description: Internal server error
      summary: Computes income taxes
  '/v1/cases/{case_id}/plan-parameters/{id}':
    delete:
      operationId: deletePlanParameters
      tags:
        - PlanParameters
      description: '/cases/{case_id}/plan-parameters/{id}'
      parameters:
        - description: Entity tag of the resource that is being updated
          in: header
          name: If-Match
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/DeleteResponse.v1.json
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '409':
          description: Conflict error while trying to update the resource
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Deletes plan-parameters based on ID
    get:
      operationId: getPlanParametersById
      tags:
        - PlanParameters
      description: '/cases/{case_id}/plan-parameters/{id}'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/PlanParametersResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Returns plan-parameters by ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: case_id
        required: true
        schema:
          type: string
    put:
      operationId: putPlanParameters
      tags:
        - PlanParameters
      description: '/cases/{case_id}/plan-parameters/{id}'
      parameters:
        - description: Entity tag of the resource that is being updated
          in: header
          name: If-Match
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/PlanParameters.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/PlanParametersResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '409':
          description: Conflict error while trying to update the resource
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Updates plan-parameters based on ID
  '/v1/cases/{case_id}/plan-parameters':
    parameters:
      - in: path
        name: case_id
        required: true
        schema:
          type: string
    post:
      operationId: postPlanParameters
      tags:
        - PlanParameters
      description: '/v1/cases/{case_id}/plan-parameters'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/PlanParameters.v1.json
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ../models/PlanParametersResponse.v1.json
          description: OK
          headers:
            ETag:
              description: Entity tag of the user resource
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '403':
          description: Not authorized to access this endpoint
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.json
      summary: Creates plan-parameters
servers:
  - description: Production server
    url: 'https://api.toaztr.com'
